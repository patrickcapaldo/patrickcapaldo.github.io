<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://patrickcapaldo.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://patrickcapaldo.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-06-28T08:09:48+00:00</updated><id>https://patrickcapaldo.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">The 90/90 Rule of AI Industrialisation</title><link href="https://patrickcapaldo.github.io/blog/2025/indus-90-90-rule/" rel="alternate" type="text/html" title="The 90/90 Rule of AI Industrialisation"/><published>2025-06-28T00:00:00+00:00</published><updated>2025-06-28T00:00:00+00:00</updated><id>https://patrickcapaldo.github.io/blog/2025/indus-90-90-rule</id><content type="html" xml:base="https://patrickcapaldo.github.io/blog/2025/indus-90-90-rule/"><![CDATA[<p>This post was originally made on my Substack, Hidden Layers. Check it out <a href="https://patrickcapaldo.substack.com/p/the-9090-rule-of-ai-industrialisation">here.</a></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/indus_90_90_rule/iceberg-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/indus_90_90_rule/iceberg-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/indus_90_90_rule/iceberg-1400.webp"/> <img src="/assets/img/blogs/indus_90_90_rule/iceberg.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> The prototype is the tip of the iceberg. Source: Unknown. </div> <h2 id="before-you-read">Before You Read</h2> <p><strong>Who Is This For:</strong> Technology strategists, engineering leaders, ML/platform teams, product managers and decision-makers responsible for transforming AI prototypes into reliable and scalable systems.</p> <p><strong>What You’ll Learn:</strong></p> <ul> <li>How Zillow’s Zestimate mistake exhibits the dangers of neglecting the complexity of production-grade systems.</li> <li>The five domains that often consume more effort that the prototype itself: data governance, observability, infrastructure pipelines, security/compliance, and maintenance/versioning.</li> <li>Why Shell’s predictive maintenance AI succeeded by ingraining scalability, observability and resilience.</li> </ul> <h2 id="zillows-zestimate-breakdown">Zillow’s Zestimate Breakdown</h2> <p>For over a decade, Zillow established itself as a dominant online real estate marketplace. Its primary business model was straightforward and highly profitable: it acted as a media company, attracting millions of prospective home buyers to its website and app with property listings and then selling advertising and lead-generation services to real estate agents who wanted to connect with that audience [1]. Central to this strategy was the “Zestimate,” a proprietary AI-powered home valuation tool. For years, the Zestimate served as a popular, informational feature - a conversation starter that drew immense traffic to the platform, which Zillow then monetised through its “Premier Agent” advertising program. It was never intended to be an instrument for actual transactions.</p> <p>That all changed in 2018. In a bold strategic pivot, Zillow decided to transform itself from a media company into a direct market participant. They launched “Zillow Offers,” an “iBuyer” (instant buyer) service designed to leverage the Zestimate algorithm for a new purpose: making instant, all-cash offers on homes directly to sellers. The plan was to become a “market maker.” For a consumer, the value was clear: they could skip the lengthy, uncertain process of listing their home and receive a fair cash offer with a guaranteed closing date. For Zillow, the plan was to charge a service fee comparable to an agent’s commission, perform minor renovations, and then resell the home on the open market for a profit a few months later [2]. This new model staked the company’s future on the accuracy of its AI.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/indus_90_90_rule/zillow_offers-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/indus_90_90_rule/zillow_offers-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/indus_90_90_rule/zillow_offers-1400.webp"/> <img src="/assets/img/blogs/indus_90_90_rule/zillow_offers.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> The user interface for Zillow Offers. Source: GeekWire (2021). </div> <p>At first, in a stable and rising housing market, the model appeared to work. The prototype’s accuracy, within 2–3% of the eventual sale price, looked impressive. But as market conditions shifted dramatically in mid-2021, with unprecedented housing price volatility and soaring labour and material costs, the model’s performance degraded. The algorithm, trained on historical data, failed to predict the market’s sudden cooling and began to aggressively overbid on properties. Zillow was now algorithmically committed to buying thousands of homes for prices higher than what they would be worth by the time they could be resold. This critical failure led to a staggering US$304 million inventory write-down and forced the company to shutter the entire Zillow Offers programme, laying off 25 percent of its staff [3].</p> <p>We can watch this story unfold by observing the share price of Zillow from pre-2018 to post-2022 [4-11]. Before early 2021, the share price soars with the housing boom as “work-from-home” increases demand and after-effects of Covid reduce supply, resulting in more competition, more transactions, and a stronger business. However, it all unravelled as quickly as it manifested once the failure of Zillow Offers was realised.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/indus_90_90_rule/zillow_share-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/indus_90_90_rule/zillow_share-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/indus_90_90_rule/zillow_share-1400.webp"/> <img src="/assets/img/blogs/indus_90_90_rule/zillow_share.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> The rapid rise and decline of Zillow's share price (screenshot taken on 26 June 2025). Source: Google. </div> <p>So what went so wrong? While the strategy itself was high-risk, the operational execution sealed its fate. The issues were not in the model’s initial concept but in its industrial-scale fragility. The company lacked adequate real-time performance monitoring to detect the model’s drift as market dynamics changed. No automated alerts triggered when error rates began to spike. The system was built without a robust fallback strategy, so when the AI’s valuations proved unreliable, the entire automated purchasing engine began accumulating massive losses. Because the system was never fully integrated into a resilient production pipeline (complete with continuous evaluation, scale testing, and audit logging) the team was left scrambling to diagnose the problem under intense public scrutiny. As CEO Rich Barton later conceded, “Our observed error rate has been far more volatile than we ever expected possible” [3]. Zillow’s collapse is the definitive lesson that a prototype’s success in the lab means nothing without the industrial-grade systems to support it in the wild.</p> <h2 id="the-9090-rule-explained">The “90/90 Rule” Explained</h2> <p>Software engineers have long shared a piece of cynical wisdom that captures the hidden complexities of their craft:</p> <p>“The first 90 percent of the code accounts for the first 90 percent of the development time; the remaining 10 percent accounts for the other 90 percent.” [12]</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/indus_90_90_rule/indus_90_90-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/indus_90_90_rule/indus_90_90-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/indus_90_90_rule/indus_90_90-1400.webp"/> <img src="/assets/img/blogs/indus_90_90_rule/indus_90_90.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> The 90/90 rule. Source: t2informatik. </div> <p>This “90/90 Rule,” first attributed to Tom Cargill at Bell Labs, perfectly describes the severe, but often hidden, disconnect between a clever prototype and a finished product. In AI projects, bringing your prototype into the real world is known industrialisation, the comprehensive work required to turn research code into a robust, maintainable, and scalable service. It is the silent majority of the work, encompassing data governance, observability, deployment pipelines, security controls, and maintenance processes. Each of these domains surfaces hidden dependencies and edge cases that remain invisible until real users and live workloads begin to exercise the system.</p> <h2 id="the-industrialisation-gap">The Industrialisation Gap</h2> <p>Concrete data reveals that a significant portion of AI projects stall after the proof-of-concept stage. Gartner forecasts that 30 percent of generative AI initiatives will be abandoned after their initial trials by the end of 2025, citing predictable culprits like “spiralling infra costs,” “data quality gaps,” and “insufficient risk governance” [13].</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/indus_90_90_rule/indus_gap-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/indus_90_90_rule/indus_gap-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/indus_90_90_rule/indus_gap-1400.webp"/> <img src="/assets/img/blogs/indus_90_90_rule/indus_gap.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> The Industrialisation Gap. Source: Gemini (AI generated). </div> <p>This trend appears to be worsening. S&amp;P Global Market Intelligence found that a startling 42 percent of organisations scrapped most of their AI prototypes this year which is a dramatic increase from 17 percent last year. Teams often blame this on inadequate data pipelines and runaway eleventh-hour engineering work [14].</p> <p>This “pilot paradox” is further confirmed by another Gartner survey, which reports that only 54 percent of AI models successfully progress to sustained production, a figure that has barely changed over three years despite soaring investment in the field [15]. These metrics deliver a clear message: prototype success does not guarantee production success unless industrialisation is planned and resourced from the very beginning. However, by requiring such planning, does it stifle creativity and discourage those who would have built a prototype on a hunch from doing so? I’m honestly not sure.</p> <h2 id="the-other-90-percent">The “Other 90 Percent”</h2> <p>So, where does this effort go? The “other 90 percent” can be thought of as the confluence of five critical, overlapping domains: Data Governance and Quality, Observability and Monitoring, Infrastructure and Deployment Pipelines, Security and Compliance, and Maintenance and Versioning.</p> <p>First is Data Governance and Quality. Whether an AI system processes data in real-time streams or periodic batches, the quality and consistency of that input data are paramount. Without schema validation, lineage tracking, and automated quality checks, pipelines break. For a streaming system, this might happen instantly; for a batch system, it could cause a silent failure during an overnight job that isn’t discovered for hours. To prevent this, best practices mandate implementing data versioning with tools like <a href="https://delta.io/">Delta Lake</a> or <a href="https://dvc.org/">DVC</a>, automating data validation with frameworks like <a href="https://greatexpectations.io/">Great Expectations</a>, and defining clear ownership for data-quality incidents. The stakes are universal; research has demonstrated that when data quality controls are absent, deployed ML systems can suffer accuracy losses of up to 30 percent [16].</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/indus_90_90_rule/data_qual_gov-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/indus_90_90_rule/data_qual_gov-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/indus_90_90_rule/data_qual_gov-1400.webp"/> <img src="/assets/img/blogs/indus_90_90_rule/data_qual_gov.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> A handy analogy to understand the purpose of, and difference between, data quality and governance. Source: Experian (2017). </div> <p>Second, a system must have Observability and Monitoring. Once deployed, any model’s behaviour can degrade silently due to data drift, infrastructure failures, or adversarial inputs. For an online service, this might manifest as rising latency or error rates. For a batch system, it could be a gradual decline in the accuracy of its periodic outputs or an unexplained increase in processing time. Without a systematic way to track key performance metric, such as latency for services or completion time for batch jobs, along with error rates and output distributions, teams remain blind until downstream business processes are impacted. This is where observability provides deep insights into a system’s health, using tools and practices to track metrics, log results, and alert on anomalies. Industry leaders like Netflix treat this deep visibility as indispensable for uptime and performance, a principle that applies to any critical AI workload [17].</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/indus_90_90_rule/monitor_obs-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/indus_90_90_rule/monitor_obs-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/indus_90_90_rule/monitor_obs-1400.webp"/> <img src="/assets/img/blogs/indus_90_90_rule/monitor_obs.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Monitoring is concerned with viewing predefined metrics whilst observability is concerned with figuring out the internal state from a variety of external behaviours. Source: Monte Carlo (2025). </div> <p>Third is the domain of Infrastructure and Deployment Pipelines. A prototype running in a data scientist’s notebook is far from a scalable, resilient, and automated production workload. Production demands containerisation with tools like <a href="https://www.docker.com/">Docker</a> and orchestration via platforms suited for the specific task - whether real-time services on <a href="https://kubernetes.io/">Kubernetes</a>, event-driven functions, or scheduled jobs on workflow orchestrators. This is all automated through continuous integration / continuous deployment (CI/CD) pipelines using systems like <a href="https://github.com/features/actions">GitHub Actions</a> or <a href="https://www.jenkins.io/">Jenkins</a>. This task is not to be underestimated. Forrester estimates that robust CI/CD and infrastructure automation can add roughly 30 percent more development time on top of the model development itself [18]. Using Infrastructure-as-Code (IaC) to codify environments and performing scale tests with production-volume data are essential, universal practices.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/indus_90_90_rule/ci_cd-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/indus_90_90_rule/ci_cd-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/indus_90_90_rule/ci_cd-1400.webp"/> <img src="/assets/img/blogs/indus_90_90_rule/ci_cd.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> A typical CI/CD pipeline for incremental delivery of software. Source: Xenonstack (2024). </div> <p>Fourth, and critically, are Security and Compliance. Production AI systems, regardless of their architecture, often process sensitive, regulated, or at least highly-valuable data, making them potential targets. A security breach can lead to devastating data loss, while violations of licensing or data-residency laws lead to legal and financial penalties. Hardening a system requires adherence to established security frameworks, such as applying the principles of the <a href="https://owasp.org/www-project-top-ten/">OWASP Top Ten</a> to any web-facing components [19] and implementing robust controls like those outlined in <a href="https://csrc.nist.gov/pubs/sp/800/53/r5/upd1/final">NIST SP 800-53</a> [20] across the entire system. This includes encrypting data both at rest and in transit, managing access control tightly, rotating keys, and maintaining thorough audit logs for every action the system makes. Despite this, a 2024 survey by the Cloud Security Alliance revealed that 62 percent of AI projects lacked a formal security assessment before deployment [21].</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/indus_90_90_rule/comp_sec-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/indus_90_90_rule/comp_sec-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/indus_90_90_rule/comp_sec-1400.webp"/> <img src="/assets/img/blogs/indus_90_90_rule/comp_sec.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Compliance is reactive to ensure predefined standards and regulations are met whereas security is proactive to continuously protect assets from threats. Source: Rui Pedrosa, Medium (2021). </div> <p>Finally, there is Maintenance and Versioning. An AI system is never “done.” Models naturally drift as the statistical properties of the data change over time (think, Zillow Offers and the housing market cool-off), and their software dependencies require constant updates. Without a disciplined maintenance strategy, which includes versioning not just the model code, but the model artifact and the data it was trained on every update risks introducing regressions and makes reproducing past results impossible. A mature approach requires using model registries like <a href="https://mlflow.org/">MLflow</a> or {Seldon Hub](https://www.seldon.io/) and implementing safe validation strategies before a full rollout. For online systems, this often means blue-green or canary deployments; for batch systems, it could involve shadow deployments (running the new model in parallel with the old) or processing a small slice of data to compare outputs. Airbnb pioneered this principle of incremental validation, using canary testing to limit the impact of updates, a strategy that can be adapted for any system type [22].</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/indus_90_90_rule/vers-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/indus_90_90_rule/vers-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/indus_90_90_rule/vers-1400.webp"/> <img src="/assets/img/blogs/indus_90_90_rule/vers.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Basic syntax of semantic versioning - a reminder that a system is never “done” whilst it still exists. You are either doing major changes, minor changes, or fixing bugs. Source: Ashu Rana, Medium (2019). </div> <h2 id="shells-global-predictive-maintenance-ai">Shell’s Global Predictive Maintenance AI</h2> <p>Shell is a multinational energy company that, in March 2022, deployed AI-driven predictive maintenance to over 10,000 pieces of critical equipment (e.g., pumps, compressors, valves) across its upstream, downstream and integrated-gas operations [23]. From day one, Shell embedded enterprise discipline by standardising on the C3 AI Suite on Microsoft Azure which ingests 20 billion rows weekly from more than 3 million sensors via its Delta Lake–inspired Sensor Intelligence Platform [23]. This foundation required repeatable validation. For every production model, Shell trained and tested three to four candidate variants before deployment.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/indus_90_90_rule/shell-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/indus_90_90_rule/shell-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/indus_90_90_rule/shell-1400.webp"/> <img src="/assets/img/blogs/indus_90_90_rule/shell.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Lots of different components have to work well in sync. Source: Shell. </div> <p>Their deployment model focused on seamless integration into existing maintenance workflows and dashboards. Alerts and anomaly insights appear directly to technicians without disrupting protocols. Additionally, this system was commercialised industry-wide through the Open AI Energy Initiative [24]. Critically, over 10,000 production-grade ML models now generate 15 million predictions per day, with automated alerts on metric deviations and 24/7 availability backed by Azure’s multi-region failover. By making scalability, observability and resilience core features, Shell turned a pilot into a global, mission-critical service that delivers substantial cost avoidance, safety and environmental benefits.</p> <h2 id="conclusion">Conclusion</h2> <p>The “90/90 Rule” is a warning that is beginning to ring true for a lot of organisations getting their hands dirty with AI experimentation and industrialisation. The prototype is only half the journey. Industrialisation (covering complexities of data governance, observability, infrastructure automation, security, and maintenance) often demands resources and attention equal to or exceeding those spent on the initial model. The contrasting stories of Zillow’s Zestimate debacle and Shell’s predictive maintenance feat illustrate the two possible outcomes of this journey. A prototype is a promise, not a product. By baking in industrialisation considerations from day one, you transform that promise into a sustained, scalable, and resilient value stream.</p> <h2 id="references">References</h2> <ol> <li> <p>Garrison, T. “Inside Zillow’s Advertising Empire.” Bloomberg Businessweek, 15 May 2019.</p> </li> <li> <p>DelPrete, M. “The 2021 iBuyer Report.” Mike DelPrete’s Real Estate Tech Insights, 12 Nov 2021.</p> </li> <li> <p>Henry, K. “Zillow’s U-Turn: Lessons from a $304 M Writedown.” The Wall Street Journal, 23 Jan 2022.</p> </li> <li> <p>iBuyer.com. (n.d.). Zillow iBuyer Program Details. (General reference for iBuyer program launch and goals).</p> </li> <li> <p>Zillow Group. (2021, November 2). Zillow Group Reports Third-Quarter 2021 Financial Results. [This is the core announcement of the Zillow Offers shutdown and the initial write-down. The $304M write-down and 25% staff layoff are referenced in the provided user text and confirmed by subsequent Zillow earnings reports.]</p> </li> <li> <p>Business Wire. (2025, May 29). The U.S. Housing Market Has Nearly 500,000 More Sellers Than Buyers—the Most on Record. That Will Likely Cause Home Prices to Fall. (Provides context on housing market trends in 2022-2025).</p> </li> <li> <p>Office for National Statistics. (2023, January 9). How increases in housing costs impact households. (Context on rising interest rates and their impact on housing).</p> </li> <li> <p>Zillow Group. (2021, February 10). Zillow Group Q4 2020 Earnings Call.</p> </li> <li> <p>Zillow Group. (2021, May 4). Zillow Group Q1 2021 Earnings Call.</p> </li> <li> <p>Zillow Group. (2022, February 10). Zillow Group Reports Fourth-Quarter and Full-Year 2021 Financial Results.</p> </li> <li> <p>[Historical Stock Data] Google Finance</p> </li> <li> <p>Bentley, J. “Programming Pearls.” Communications of the ACM, July 1986.</p> </li> <li> <p>Gartner (July 2024). “Gartner Predicts 30 % of Generative AI Projects Abandoned Post-POC.” Gartner Research (subscription).</p> </li> <li> <p>Wilkinson, L. “AI Project Failure Rates Surge.” S&amp;P Global Market Intelligence, 14 Mar 2025.</p> </li> <li> <p>Gartner (2023). “AI Pilot to Production Success Rates.” Gartner Survey.</p> </li> <li> <p>Budach, L. et al. “The Effects of Data Quality on Machine Learning Performance.” arXiv, 2022.</p> </li> <li> <p>“Observability at Netflix.” Netflix Tech Blog (accessed June 2025).</p> </li> <li> <p>Forrester Consulting (2024). “Total Economic Impact™ of AI Model Deployment Automation.”</p> </li> <li> <p>OWASP Foundation. “OWASP Top Ten.” (accessed 24 Jun 2025).</p> </li> <li> <p>NIST. “SP 800-53 Rev. 5: Security and Privacy Controls.” (2020).</p> </li> <li> <p>Cloud Security Alliance (2024). “AI Security and Risk Survey.”</p> </li> <li> <p>Airbnb Engineering &amp; Data Science. “Continuous Delivery for Machine Learning at Airbnb.”</p> </li> <li> <p>C3 (2022). “How Shell Scaled AI Predictive Maintenance to Monitor 10,000 Pieces of Equipment Globally.”</p> </li> <li> <p>Journal of Petroleum Technology (2022). “Shell Scales Predictive Maintenance to 10,000 Pieces.”</p> </li> </ol>]]></content><author><name>Patrick Capaldo</name></author><category term="blogs"/><category term="artificial-intelligence"/><summary type="html"><![CDATA[The first 90% of the AI system takes 90% of the development time and the remaining 10% of the AI system takes the remaining 90% of the development time.]]></summary></entry><entry><title type="html">Europe’s “Sovereign AI” Push</title><link href="https://patrickcapaldo.github.io/blog/2025/eu-ai-sovereignty/" rel="alternate" type="text/html" title="Europe’s “Sovereign AI” Push"/><published>2025-06-20T00:00:00+00:00</published><updated>2025-06-20T00:00:00+00:00</updated><id>https://patrickcapaldo.github.io/blog/2025/eu-ai-sovereignty</id><content type="html" xml:base="https://patrickcapaldo.github.io/blog/2025/eu-ai-sovereignty/"><![CDATA[<p>This post was originally made on my Substack, Hidden Layers. Check it out <a href="https://patrickcapaldo.substack.com/p/europes-sovereign-ai-push">here.</a></p> <h2 id="before-you-read">Before You Read</h2> <p><strong>Who Should Read:</strong> Engineers, strategists and decision-makers involved in AI deployment, data‑centre planning, and supply‑chain strategy in Europe. A basic familiarity with AI hardware ecosystems and European digital‑sovereignty debates is assumed.</p> <p><strong>What You’ll Learn:</strong></p> <ul> <li>The meaning of the “Sovereign AI” concept as advanced by Nvidia and how it aligns with European digital‑sovereignty goals.</li> <li>The key partnerships and investment announcements made during Jensen Huang’s recent European tour.</li> <li>How these developments could reshape data‑centre planning, chip procurement, and supply‑chain decisions in Europe.</li> <li>Immediate strategic steps for organisations and policymakers operating in Europe’s AI infrastructure domain.</li> </ul> <h2 id="europes-ai-crossroads">Europe’s AI Crossroads</h2> <p>Europe’s leaders have for years voiced concerns that the continent trails the United States and China in AI infrastructure. Data‑centre capacity, chip availability and domestic cloud offerings have lagged behind global hyperscalers. High energy costs and regulatory hurdles for new data centres add to the complexity. Against this backdrop, the idea of “digital sovereignty” - the notion that Europe should reduce dependency on non‑European tech giants for critical infrastructure - has grown from policy rhetoric into tangible action plans. Nvidia’s Jensen Huang has seen this opportunity and gone for it with his European tour in June 2025.</p> <h2 id="defining-sovereign-ai">Defining “Sovereign AI”</h2> <p>The term “Sovereign AI” as presented by Huang is anchored in the belief that AI models, data and inference workloads should reflect local languages, cultures and regulatory requirements. He argues that “each nation needs to develop and own its AI” so that solutions are tailored to regional needs rather than imposed from afar [1]. This framing resonates with longstanding EU policy themes: data‑protection rules, strategic autonomy and support for domestic industry.</p> <p>According to Reuters, Huang has been pitching this concept since 2023, but in mid‑2025 it gained traction as European leaders responded to concrete proposals rather than abstract exhortations. Financial Times coverage echoed this, noting Huang’s warning that Europe must “move into AI quickly” or risk remaining solely a consumer of foreign technologies [2]. Thus, “Sovereign AI” became more than just a slogan: it serves as a clear geopolitical message for the importance of AI in the near future, and of course, as a powerful sales pitch for Nvidia.</p> <h2 id="london-an-invitation-to-whitehall">London: An Invitation to Whitehall</h2> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/eu_ai_sovereignty/uk_jensen_june_2025-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/eu_ai_sovereignty/uk_jensen_june_2025-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/eu_ai_sovereignty/uk_jensen_june_2025-1400.webp"/> <img src="/assets/img/blogs/eu_ai_sovereignty/uk_jensen_june_2025.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Keir Starmer, Prime Minister of the United Kingdom (left) and Jensen Huang, CEO of Nvidia (right), talk at the London Tech Week, June 9, 2025. Source: Bloomberg, 2025. </div> <p>In early June 2025, the UK government, having recently signalled ambitions to bolster national AI capabilities, invited Huang to London Tech Week. At a roundtable in Whitehall, Prime Minister Sir Keir Starmer emphasised the desire for Britain to become “an AI maker and not an AI taker”. Shortly afterwards, he announced a £1 billion package to scale up computing power for domestic AI research and development [2][3].</p> <p>Nvidia’s presence in this narrative was immediate. In meetings with UK officials and domestic cloud and telecom providers, Huang outlined how Nvidia’s AI accelerators and software stacks could underpin in‑region compute platforms. The message was clear: while Europe seeks sovereignty, it will still rely on technology from leading vendors. This paradox, that digital independence may deepen ties with dominant suppliers, surfaced repeatedly in conversations and press coverage.</p> <h2 id="paris-vivatech-and-the-sovereignty-narrative">Paris: VivaTech and the Sovereignty Narrative</h2> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/eu_ai_sovereignty/france_jensen_june_2025-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/eu_ai_sovereignty/france_jensen_june_2025-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/eu_ai_sovereignty/france_jensen_june_2025-1400.webp"/> <img src="/assets/img/blogs/eu_ai_sovereignty/france_jensen_june_2025.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Arthur Mensch, CEO of Mistral (left), Jensen Huang (centre), and Emmanuel Macron, President of France (right), at VivaTech in Paris, June 11, 2025. Source: Le Monde, 2025. </div> <p>A few days later in Paris at VivaTech, the narrative deepened. On the conference stage, French President Emmanuel Macron declared that building AI infrastructure was “our fight for sovereignty” [1]. Beside him on the panel sat Huang and the CEO of Mistral, a fast‑growing French AI startup. Mistral announced a partnership with Nvidia to build a data centre powered by Nvidia AI chips, starting with 18,000 units in the first phase and with plans for multi‑site expansion in 2026 [1][4]. This collaboration was depicted as a template for how European model builders and infrastructure providers could join forces with leading hardware suppliers to create a region‑focused AI ecosystem.</p> <p>In a separate press statement, Nvidia detailed agreements with model builders and cloud providers across France, Italy, Spain and beyond, aiming to deploy Nvidia Nemotron‑optimised models via regional AI infrastructure [4]. Nvidia Nemotron is a family of open, large language models (LLMs) and vision language models (VLMs) designed to accelerate the development of AI agents, especially in enterprise settings. The emphasis was on local data handling, compliance with EU regulations and reduced latency for European end users. This narrative wove policy and technology: Europe’s digital‑sovereignty ambitions meet Nvidia’s hardware roadmap, anchored by the promise of tailored AI services.</p> <h2 id="berlin-an-industrial-ai-cloud">Berlin: An Industrial AI Cloud</h2> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/eu_ai_sovereignty/germany_jensen_june_2025-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/eu_ai_sovereignty/germany_jensen_june_2025-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/eu_ai_sovereignty/germany_jensen_june_2025-1400.webp"/> <img src="/assets/img/blogs/eu_ai_sovereignty/germany_jensen_june_2025.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Jensen Huang (left) meets Friedrich Merz, Chancellor of Germany, in Berlin, June 13, 2025. Source: The Japan Times, 2025. </div> <p>Continuing the tour, Huang travelled to Berlin to meet Chancellor Friedrich Merz and engage with German telecom giant Deutsche Telekom. According to Reuters, the discussion revolved around building an “industrial AI cloud” in Germany that will use Nvidia technology [1][5]. Merz characterised this as vital for Germany’s economic future and digital sovereignty. Germany, a leading EU economy with a world-class industrial sector, views AI as central to competitiveness.</p> <p>In that context, Nvidia’s proposal to work with Deutsche Telekom on an in‑region cloud platform offered a way to keep sensitive industrial data within Europe while accessing state‑of‑the‑art accelerators. Yet, the conversation also highlighted challenges: data centres consume significant electricity, and Europe’s energy costs are higher than many other regions. Reports note that data centres account for about 3 per cent of EU electricity demand and face scrutiny over sustainability and grid impact as AI workloads surge [1][6]. Thus, while the promise of a sovereign AI cloud is appealing, it introduces new energy and regulatory considerations.</p> <h2 id="underlying-policy-moves-eu-action-plans-and-gigafactories">Underlying Policy Moves: EU Action Plans and Gigafactories</h2> <p>Behind the scenes, the European Commission has been consulting on AI infrastructure roadmaps. In early 2025, Brussels floated plans for multiple “AI gigafactories” with an estimated combined budget of US$20 billion to develop local chip production, packaging and advanced data‑centre capabilities [1]. Additionally, the European Commission approved a €1.5 billion fund in December last year for seven new or upgraded AI supercomputers of which the first are planned to be launched this year [10]. Although full semiconductor fabrication remains concentrated in a few global sites (most famously, TSMC in Taiwan), the EU seeks to bolster assembly, packaging and specialised AI component production within Europe.</p> <p>Nvidia reportedly discussed allocating some chip production capacity to Europe for these projects, indicating a willingness to support EU objectives [1]. These plans were further detailed in a European Commission press release for the AI Continent Action Plan [11] that highlights 13 AI Factories, including LUMI AIF in Finland, MIMER in Sweden, PIAST AIF in Poland, AIF Austria, BRAIN++ in Bulgaria, Pharos in Greece, SLAIF in Slovenia, ITALIA in Italy, JAIF and HammerHAI in Germany, AIZF in France, BSC AIF in Spain, and Meluxina-AI in Luxembourg. The EuroHPC initiative provides the raw hardware and infrastructure layer for the AI Factories (AIF) which are the application layer responsible for deploying and maintaining AI services.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/eu_ai_sovereignty/eu_ai_factories-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/eu_ai_sovereignty/eu_ai_factories-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/eu_ai_sovereignty/eu_ai_factories-1400.webp"/> <img src="/assets/img/blogs/eu_ai_sovereignty/eu_ai_factories.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Map of Europe showing AI Factories (AIF) as part of the EuroHPC initiative. Source: European Commission, 2025. </div> <p>National governments have likewise introduced incentives: beyond the UK’s £1 billion compute fund, Germany and France are updating policies to ease data‑centre planning while emphasising renewable energy partnerships. Yet challenges remain: planning approval timelines can be long; high energy prices and grid constraints require innovative approaches such as co‑location with renewable projects or off‑peak operation models. These policy signals form the backdrop to Nvidia’s tour and the partnerships unveiled.</p> <h2 id="industry-response-european-cloud-and-telecom-providers">Industry Response: European Cloud and Telecom Providers</h2> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/eu_ai_sovereignty/nscale-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/eu_ai_sovereignty/nscale-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/eu_ai_sovereignty/nscale-1400.webp"/> <img src="/assets/img/blogs/eu_ai_sovereignty/nscale.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Nscale’s sovereign AI data centre in the Arctic, powered by 100% renewable energy. Source: Nscale, 2025. </div> <p>Across Europe, regional cloud and telecom providers are preparing to roll out Nvidia‑powered AI services. In the UK, firms such as Nebius and Nscale announced plans to integrate thousands of Nvidia GPUs into their data centres, positioning themselves as sovereign‑friendly alternatives to global hyperscalers [4]. In France and Germany, similar announcements emerged: collaborations between Nvidia and local operators to offer AI platforms tailored to European compliance requirements.</p> <p>Start-ups and system integrators also reacted. Mistral’s alliance with Nvidia exemplifies how local model builders can leverage global hardware leadership while retaining data‑governance controls. Other European AI startups are exploring hybrid approaches: combining open models, local data pipelines and hardware co‑investment through public‑private partnerships. However, domain observers caution, reasonably, that Europe’s smaller domestic budgets cannot match the quarterly infrastructure spending of US hyperscalers, which can exceed US$10 billion per quarter on data‑centre expansion [1]. This gap underscores the need for creative consortium-based funding, efficiency improvements in hardware usage, and prioritisation of strategic use cases.</p> <h2 id="what-this-means-for-compute-supply-chains">What This Means for Compute Supply Chains</h2> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/eu_ai_sovereignty/nvidia_eu-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/eu_ai_sovereignty/nvidia_eu-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/eu_ai_sovereignty/nvidia_eu-1400.webp"/> <img src="/assets/img/blogs/eu_ai_sovereignty/nvidia_eu.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> NVIDIA Partners With Europe Model Builders and Cloud Providers to Accelerate Region's Leap Into AI | NVIDIA Newsroom Nvidia is extending and asserting its dominance to Europe. Source: Nvidia, 2025. </div> <p>Despite the aim of sovereignty, Nvidia emerges as a central figure, as they often do when AI hardware becomes a topic of expenditure. Europe seeks independence but still relies on a leading non‑European hardware vendor. This duality scores a line in the sand for Europe’s AI capabilities - they are confident they can replicate the businesses of the model designers and manufacturers, but not those of the hardware designers and manufacturers like Nvidia and TSMC, respectively. This is a reasonable decision as catching-up to Nvidia is something that no company on the planet has been able to achieve yet (let alone catching up to TSMC), so this goal is likely on a further horizon.</p> <p>This entrenchment also suggests Nvidia’s market position will strengthen, as regional cloud operators and government-backed projects procure Blackwell GPUs and associated software stacks. Supply‑chain planners should anticipate high demand for Nvidia components, potential lead times for GPUs and related infrastructure (power supplies, interconnects). Organisations must plan procurement cycles early and consider potential shortages.</p> <h3 id="potential-for-local-assembly-and-packaging">Potential for Local Assembly and Packaging</h3> <p>The EU’s gigafactory proposals and Nvidia’s indication of allocating some production to Europe may open avenues for local assembly, packaging or specialised chip variants tailored to European needs. While wafer fabrication likely remains offshore, assembly and testing in Europe could reduce some supply‑chain risks (e.g., geopolitical tensions affecting shipping). Stakeholders should monitor announcements from EU semiconductor alliances and Nvidia’s manufacturing roadmap for possible engagement opportunities.</p> <h3 id="energy-and-infrastructure-constraints">Energy and Infrastructure Constraints</h3> <p>AI workloads are notoriously energy‑intensive. Europe’s higher electricity costs and stricter environmental regulations mean data‑centre operators must develop sustainable approaches. This could include partnerships with renewable energy providers, deployment of energy‑efficient GPU clusters and exploring liquid cooling or specialised facility designs. Supply‑chain considerations extend to securing reliable renewable energy contracts, hardware configurations optimised for power efficiency, and planning for grid integration challenges.</p> <h3 id="strategic-leverage-and-publicprivate-collaboration">Strategic Leverage and Public‑Private Collaboration</h3> <p>Governments may offer funding or incentives tied to digital‑sovereignty objectives. Organisations should engage early in public‑private forums and consultations to influence funding criteria, understand compliance requirements and position proposals for co‑investment. Being part of industry alliances or forums can yield insights into forthcoming tenders or policy shifts. For hardware vendors and cloud providers, aligning offerings with sovereignty criteria (e.g., data residency guarantees, local support) can enhance their appeal and competitiveness.</p> <h2 id="immediate-steps-for-strategists-in-europe">Immediate Steps for Strategists in Europe</h2> <p>Identify Current Dependencies Start by auditing existing compute infrastructure and supplier relationships. Find workloads with strict data‑residency or compliance demands that would benefit from in‑region deployment (e.g., highly sensitive or confidential data or processes). This identification informs where to invest in sovereign‑aligned infrastructure versus where to continue using established global hyperscalers for less sensitive tasks.</p> <h3 id="engage-in-sovereign-ai-forums">Engage in Sovereign AI Forums</h3> <p>Join relevant working groups or industry forums (e.g., the newly formed UK Sovereign AI Industry Forum [12], EU consultations). Early engagement yields awareness of funding streams, regulatory expectations and partnership opportunities. It also provides a platform to raise practical concerns (e.g., energy costs, talent gaps).</p> <h3 id="assess-hybrid-infrastructure-models">Assess Hybrid Infrastructure Models</h3> <p>Evaluate a hybrid approach combining in‑region data centres with Nvidia hardware for sensitive or strategic workloads, and external clouds for elasticity. Analyse cost‑benefit trade‑offs, factoring in total cost of ownership (including energy, real estate and talent) and performance requirements.</p> <h3 id="plan-for-sustainable-energy">Plan for Sustainable Energy</h3> <p>Collaborate with renewable energy providers or explore on‑site generation where feasible. Work with hardware architects to design energy‑efficient clusters (e.g., right‑sized GPU pods, advanced cooling). Incorporate energy cost projections into financial models for new data‑centre builds or expansions. Ensure a clear understanding of the electricity requirements of AI workloads is understood and how different energy sources provide this electricity (e.g., the benefit of batteries when utilising pure renewable energy).</p> <h3 id="monitor-nvidia-and-competitor-roadmaps">Monitor Nvidia and Competitor Roadmaps</h3> <p>Keep abreast of Nvidia announcements regarding hardware availability, local production or assembly initiatives, and software stacks (e.g., Nvidia AI Cloud). Equally, watch for emerging European or global competitors offering alternative accelerators or open‑source hardware initiatives that could diversify supply‑chain risk.</p> <h3 id="develop-talent-and-ecosystem">Develop Talent and Ecosystem</h3> <p>Invest in training programmes for AI infrastructure management and MLOps (Machine Learning Operations) aligned with sovereign‑AI objectives. Partner with universities, accelerator programmes and Nvidia’s training offerings to build a skilled workforce capable of deploying and optimising in‑region AI systems.</p> <h3 id="prepare-for-regulatory-and-planning-timelines">Prepare for Regulatory and Planning Timelines</h3> <p>Data‑centre projects can face lengthy planning approvals. Begin early discussions with local authorities on zoning, environmental assessments and permitting. Align project timelines with anticipated grant or subsidy windows to avoid delays.</p> <h3 id="prototype-strategic-use-cases">Prototype Strategic Use Cases</h3> <p>Identify high‑value AI applications (e.g., industrial automation in Germany, healthcare analytics in France, financial services in the UK) that justify sovereign‑aligned infrastructure. Pilot projects can demonstrate viability, attract further funding and build momentum for larger-scale deployment.</p> <h2 id="conclusion">Conclusion</h2> <p>Jensen Huang’s mid-June 2025 European tour is a story of two tales: Europe wants AI sovereignty, and Nvidia wants to give it to them. The slight irony here being that Nvidia is not a European company, yet this does push the envelope of European AI capability further out from where it currently is by ensuring Europe at least creates and runs its own models. Full sovereignty of the AI stack (i.e., including chip design and manufacture) is something that will take much longer to achieve, yet baby-steps like assembly and testing of chips are tasks that could be introduced now to work towards this.</p> <p>Jensen’s tour destinations, in London, Paris and Berlin, revealed concrete partnerships, government funding commitments and discussions about local assembly, all situated within broader EU policy moves like AI gigafactories. For supply‑chain strategists, the imperative is clear: plan proactively for high demand for Nvidia hardware, engage in public‑private collaborations, address energy and regulatory constraints, and develop hybrid infrastructure models. By meshing together these trends, organisations can help Europe’s aspiration to be an “AI maker” rather than an “AI taker,” while managing practical challenges around cost, sustainability and supply‑chain resilience.</p> <h2 id="references">References</h2> <ol> <li> <p>Supantha Mukherjee, Reuters. “Nvidia’s pitch for sovereign AI resonates with EU leaders,” 16 June 2025. URL: https://www.reuters.com/business/media-telecom/nvidias-pitch-sovereign-ai-resonates-with-eu-leaders-2025-06-16/</p> </li> <li> <p>Financial Times. “Nvidia chief says UK lacks digital infrastructure as Keir Starmer pledges £1bn for AI,” 9 June 2025. URL: https://www.ft.com/content/cc04adfb-81b2-477f-b85c-ce042e8f83a8</p> </li> <li> <p>UK Government. “Prime Minister’s remarks at London Tech Week 2025: Monday 9 June,” 9 June 2025. URL: https://www.gov.uk/government/speeches/prime-ministers-remarks-at-london-tech-week-2025-monday-9-june</p> </li> <li> <p>NVIDIA News Release. “NVIDIA Partners With Europe Model Builders and Cloud Providers to Accelerate Region’s Leap Into AI,” 11 June 2025. URL: https://nvidianews.nvidia.com/news/nvidia-partners-with-europe-model-builders-and-cloud-providers-to-accelerate-regions-leap-into-ai</p> </li> <li> <p>Supantha Mukherjee, Reuters. (Within “Nvidia’s pitch for sovereign AI resonates with EU leaders,” reference to EU plans) “In February, the European Union announced plans to build four ‘AI gigafactories’ at a cost of $20 billion to lower dependence on U.S. firms,” 16 June 2025. URL: as in [1].</p> </li> <li> <p>Reuters. “Prime Minister Starmer plans to make Britain AI ‘superpower’,” 12 January 2025. URL: https://www.reuters.com/world/uk/uk-pm-starmer-outline-plan-make-britain-world-leader-ai-2025-01-12/</p> </li> <li> <p>Supantha Mukherjee, Reuters. “After Nvidia laid out plans to build an AI cloud platform in Germany with Deutsche Telekom, German Chancellor Friedrich Merz called it an ‘important step’,” 16 June 2025. URL: https://www.reuters.com/business/media-telecom/nvidias-pitch-sovereign-ai-resonates-with-eu-leaders-2025-06-16/</p> </li> <li> <p>Supantha Mukherjee, Reuters. “High electricity costs and rising demand could strain sourcing of electricity for data centres. Data centres account for 3% of EU electricity demand, but their consumption is expected to increase rapidly this decade due to AI,” within “Nvidia’s pitch for sovereign AI resonates with EU leaders,” 16 June 2025. URL: as in [1].</p> </li> <li> <p>Supantha Mukherjee, Reuters. “There’s no reason why Europe shouldn’t have tech champions,” quoting Mistral CEO Arthur Mensch at VivaTech, 16 June 2025. URL: as in [1].</p> </li> <li> <p>Anna Desmarais, Euro News. “The EU is set to create 7 new AI factories around Europe. What are they and what will they do?”, 21 December 2024. URL: https://www.euronews.com/next/2024/12/21/the-eu-is-set-to-create-7-new-ai-factories-around-europe-what-are-they-and-what-will-they-</p> </li> <li> <p>European Commission. “Commission sets course for Europe’s AI leadership with an ambitious AI Continent Action Plan”. 9 April 2025. URL: https://ec.europa.eu/commission/presscorner/detail/en/ip_25_1013</p> </li> <li> <p>Anthony Hills, Nvidia. “‘AI Maker, Not an AI Taker’: UK Builds Its Vision With NVIDIA Infrastructure”. 8 June 2025. URL: https://blogs.nvidia.com/blog/uk-ai-vision/</p> </li> </ol>]]></content><author><name>Patrick Capaldo</name></author><category term="blogs"/><category term="artificial-intelligence"/><summary type="html"><![CDATA[Nvidia’s Tour & Implications for Compute Supply Chains]]></summary></entry><entry><title type="html">Paths of Resistance</title><link href="https://patrickcapaldo.github.io/blog/2025/paths-of-resistance-copy/" rel="alternate" type="text/html" title="Paths of Resistance"/><published>2025-05-06T00:00:00+00:00</published><updated>2025-05-06T00:00:00+00:00</updated><id>https://patrickcapaldo.github.io/blog/2025/paths-of-resistance%20copy</id><content type="html" xml:base="https://patrickcapaldo.github.io/blog/2025/paths-of-resistance-copy/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/blogs/paths_of_resistance/paths-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/blogs/paths_of_resistance/paths-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/blogs/paths_of_resistance/paths-1400.webp"/> <img src="/assets/img/blogs/paths_of_resistance/paths.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>What are the pros and cons of using a GPS to navigate? Or a calculator to do simple arithmetic?</p> <p>Conversely, what are the pros and cons of growing your own food? Or doing all your research only via books in a library?</p> <p>These are all examples of paths of resistance.</p> <p>In our current era, exploiting the ease of using GPS or calculators is an example of taking a path of low resistance. There is nothing inherently wrong with this. Using a GPS will probably get you to your destination faster and using a calculator will probably help you to finish your work quicker, meaning you can spend more time doing what you like or spending time with your friends and family. However, the more parts of our lives we automate, the more skills we lose. If you only use GPS, you may lose your spatial awareness and navigation skills completely. If you only use calculators, you might not be able to tally-up prices or check if a discount is worth it when shopping. There is a cost to taking the path of low resistance.</p> <p>Conversely, in our current era, only eating what one grows or refusing to use the internet for research are examples of paths of high resistance. Again, there is nothing inherently wrong with this. Growing your own food will likely lead you to improved health and gaining important skills and knowledge about our natural world and self-sustainability. Additionally, if you only used physical books to do your research, you might read things that can’t be found on the internet, be led down rabbit holes that only the meanderings through physical aisles could cause, or even meet someone who helps you more than the internet ever would. However, the more parts of our lives we do manually, the less time we have to do other things. If you only eat food you grow, you will be limited nutritionally by your environment and you sustenance will be subject to the whims of the weather. Additionally, if you only do research via books in a library, you will miss out on billions of other sources and perspectives that no collection of books could possibly provide, let alone for you to comb through if it did exist. There is a cost to taking the path of high resistance.</p> <p>By now we can see that neither path, low nor high resistance, is ‘best’. Both have pros and cons. So, maybe the ‘best’ path is somewhere in-between - or maybe its to walk all of them, but not one for too long.</p> <p>This is also true of our world now that we have machine learning models approaching the capabilities of human intelligence. What does it mean for us to outsource critical thinking tasks? What is the purpose of a human if they simply prompt a machine learning model? Sure, we have taste and our direction and guidance is worth a lot. But at what point do we then outsource the taste and direction, since surely a path of even less resistance would be asking the machine learning model “give me some ideas yourself”, and we select from there.</p> <p>The path of least resistance is a nice one, but it gets slippery pretty fast.</p> <p>If you don’t stop and reflect every now and then, sometimes forcing yourself to take a path of higher resistance, what will you become? As I mentioned, there is nothing wrong with any of these paths. Take this article as an example, I wrote it off the top of my mind and with my own thoughts, yet utilised AI to generate the cover photo and am publishing it on the internet using my computer.</p> <p>As I said, maybe the ‘best’ path is all of them, but not one for too long.</p>]]></content><author><name>Patrick Capaldo</name></author><category term="blogs"/><category term="artificial-intelligence"/><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Humans and Our Tools</title><link href="https://patrickcapaldo.github.io/blog/2025/humans-and-our-tools/" rel="alternate" type="text/html" title="Humans and Our Tools"/><published>2025-04-23T00:00:00+00:00</published><updated>2025-04-23T00:00:00+00:00</updated><id>https://patrickcapaldo.github.io/blog/2025/humans-and-our-tools</id><content type="html" xml:base="https://patrickcapaldo.github.io/blog/2025/humans-and-our-tools/"><![CDATA[<p>What happens to the purpose of a human once they have made a tool that helps them do something?</p> <p>When we invented the stone spear to hunt animals, this may have slowly reduced the need for skills like stealth, patience, trapping, and maybe even hand-to-hand combat. The spear allowed us to attack from a distance. It changed what it meant to hunt.</p> <p>This is what every tool does, it changes what it means to do something.</p> <p>The plow extended our farming ability, but distanced us from wild foraging.</p> <p>The Global Positioning System (GPS) gave us unprecedented navigation, but reduced the need for spatial awareness and memory.</p> <p>The calculator gave us perfect, fast numerical processing, but reduced the need for mental arithmetic.</p> <p>Tools improve our efficiency, but also change what it means to do something.</p> <p>Without a doubt, the plow, the clock, GPS, and calculators have improved our lives. I am sure that in a parallel universe where these things or similar things were never invented, the average standard of living would be worse.</p> <p>However, say we conduct a though experiment and continue this trend to infinity. As we move forward, the tools we have created can do everything we used to do. Instead of driving the plow, we watch while a tool does this for us. Instead of looking at the GPS, we watch a tool follow the GPS for us. Instead of entering inputs into a calculator, we just watch a tool set up the equation and receive the answer.</p> <p>At infinity, what does this mean for humans? What is there left for us to do? This thought experiment always brings me back to the humans from the movie “WALL-E” (if you haven’t seen this, an image search will be all you need to know).</p> <p>I also wonder if my feeling now is the same feeling people had when the first plow, GPS service, and calculator was released. Is my feeling a unique one to this moment in human history, or is it simply a repeat of how humans feel when their purpose is disrupted?</p> <p>The one thing I know is that the answer should be one that comes soon.</p>]]></content><author><name>Patrick Capaldo</name></author><category term="blogs"/><category term="artificial-intelligence"/><summary type="html"><![CDATA[What is our purpose with the tools we create?]]></summary></entry><entry><title type="html">Reviewing ‘The AI Economy: Work, Wealth, and Welfare in the Robot Age’</title><link href="https://patrickcapaldo.github.io/blog/2025/book-ai-economy-bootle/" rel="alternate" type="text/html" title="Reviewing ‘The AI Economy: Work, Wealth, and Welfare in the Robot Age’"/><published>2025-02-03T00:00:00+00:00</published><updated>2025-02-03T00:00:00+00:00</updated><id>https://patrickcapaldo.github.io/blog/2025/book-ai-economy-bootle</id><content type="html" xml:base="https://patrickcapaldo.github.io/blog/2025/book-ai-economy-bootle/"><![CDATA[<p><b>7/10</b></p> <p>‘The AI Economy’ is an optimistic, whistlestop tour of some possibilities of what increased amounts of automation and autonomy will do to our lives. If you are expecting a detailed economic analysis of some of these effects, you will not get this in this book, which is unfortunate considering the calibre of Bootle’s scientific mind. However, the ideas and surface-level analyses that Bootle does present are quite interesting, particularly for those that aren’t as economics-literate like me. For example, wealth distribution and inequality (e.g., universal basic income), increasing productivity and growth, deflation of salaries through reduced labour costs and increased competition, and inflation of AI-related goods and services (e.g., salaries, hardware, software) due to high demand. Bootle also stresses the importance of the government in monitoring the AI landscape in terms of education, innovation, regulation, and labour. In terms of future industries, obviously AI-related skills are critical, but he also presents the case for the growth of industries like travel, tourism, and leisure, as his optimistic view bolsters his confidence that our AI-augmented future will involve more people with more spare time and money. Overall, I recommended this book to read, although if you would like more detailed analysis of some of these topics, perhaps you should supplement it with another source.</p>]]></content><author><name></name></author><category term="books"/><category term="artificial-intelligence"/><summary type="html"><![CDATA[Thought-provoking but becoming dated quickly.]]></summary></entry><entry><title type="html">Exploronomics</title><link href="https://patrickcapaldo.github.io/blog/2024/exploronomics/" rel="alternate" type="text/html" title="Exploronomics"/><published>2024-12-03T00:00:00+00:00</published><updated>2024-12-03T00:00:00+00:00</updated><id>https://patrickcapaldo.github.io/blog/2024/exploronomics</id><content type="html" xml:base="https://patrickcapaldo.github.io/blog/2024/exploronomics/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/projects/exploronomics/exploronomics_globe-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/projects/exploronomics/exploronomics_globe-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/projects/exploronomics/exploronomics_globe-1400.webp"/> <img src="/assets/img/projects/exploronomics/exploronomics_globe.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Exploronomics globe. </div> <p>I’m making a tool, just for fun, to help get a feel of the economics of the countries of the world.</p> <p>Check it out <a href="https://patrickcapaldo.github.io/exploronomics/" target="_blank">here!</a></p> <h2 id="globe-model">Globe Model</h2> <p>I did initially try to create my own 3D model of the Earth using primitive shapes linking this to a downloadable JSON file of the all the borders of every country in the world like <a href="https://geojson-maps.kyd.au/">this</a>.</p> <p>However, this proved to be quite difficult and buggy and was probably going to take a very long time to get working at a minimum, let alone optimising for performance on client-side. Note that this page contains only a frontend as GitHub Pages can only serve static content, meaning no backend server can run alongside the frontend. So all the computation must be done on client-side.</p> <p>I stumbled across <a href="https://observablehq.com/@michael-keith/draggable-globe-in-d3">this</a> draggable globe in D3.js by Michael Keith which was exactly what I was looking for and so I simply linked to this in my code.</p> <h2 id="data-source">Data Source</h2> <p>The <a href="https://databank.worldbank.org/">World Bank’s DataBank</a> is a no brainer for a source of data. It has just about anything you could possibly want to know about economics - although not all fields are populated for every country, but the most important ones are. I was originally planning on iteratively pulling data from this site as it updated but since this is just a static site, I settled for downloading a static collation of the most important economic factors I am interested in:</p> <ul> <li>Gross Domestic Product (GDP)</li> <li>GDP growth</li> <li>GDP per capita</li> <li>GDP per capita growth</li> <li>Inflation, consumer prices</li> <li>Unemployment, total</li> <li>Central government debt</li> <li>Human Capital Index (HCI)</li> </ul>]]></content><author><name>Patrick Capaldo</name></author><category term="tutorials"/><category term="economics"/><summary type="html"><![CDATA[Exploring Global Economics.]]></summary></entry><entry><title type="html">PyPuzzle 06 Descriptors and Property Generators</title><link href="https://patrickcapaldo.github.io/blog/2024/pypuzzle-06/" rel="alternate" type="text/html" title="PyPuzzle 06 Descriptors and Property Generators"/><published>2024-07-05T00:00:00+00:00</published><updated>2024-07-05T00:00:00+00:00</updated><id>https://patrickcapaldo.github.io/blog/2024/pypuzzle-06</id><content type="html" xml:base="https://patrickcapaldo.github.io/blog/2024/pypuzzle-06/"><![CDATA[<p>This puzzle introduces Python’s powerful <strong>descriptor protocol</strong> and the use of <strong>property decorators</strong> to control attribute access in a class.</p> <h2 id="topics-covered">Topics Covered</h2> <ul> <li>Descriptors (<code class="language-plaintext highlighter-rouge">__get__</code>, <code class="language-plaintext highlighter-rouge">__set__</code>)</li> <li>Property decorators (<code class="language-plaintext highlighter-rouge">@property</code>, <code class="language-plaintext highlighter-rouge">@&lt;name&gt;.setter</code>)</li> <li>Encapsulation and computed properties</li> </ul> <h2 id="puzzle-question">Puzzle Question</h2> <p>How does Python decide what code runs when you access or assign to an attribute? What will the following code output?</p> <h2 id="puzzle-code">Puzzle Code</h2> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Celsius</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">temperature</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
        <span class="n">self</span><span class="p">.</span><span class="n">_temperature</span> <span class="o">=</span> <span class="n">temperature</span>

    <span class="nd">@property</span>
    <span class="k">def</span> <span class="nf">temperature</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Getting value...</span><span class="sh">"</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="n">_temperature</span>

    <span class="nd">@temperature.setter</span>
    <span class="k">def</span> <span class="nf">temperature</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Setting value...</span><span class="sh">"</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">value</span> <span class="o">&lt;</span> <span class="o">-</span><span class="mf">273.15</span><span class="p">:</span>
            <span class="k">raise</span> <span class="nc">ValueError</span><span class="p">(</span><span class="sh">"</span><span class="s">Temperature below absolute zero!</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">_temperature</span> <span class="o">=</span> <span class="n">value</span>

<span class="n">temp</span> <span class="o">=</span> <span class="nc">Celsius</span><span class="p">()</span>
<span class="n">temp</span><span class="p">.</span><span class="n">temperature</span> <span class="o">=</span> <span class="mi">25</span>
<span class="nf">print</span><span class="p">(</span><span class="n">temp</span><span class="p">.</span><span class="n">temperature</span><span class="p">)</span>
<span class="n">temp</span><span class="p">.</span><span class="n">temperature</span> <span class="o">=</span> <span class="o">-</span><span class="mi">300</span>
</code></pre></div></div> <h2 id="hints">Hints</h2> <ol> <li>The <code class="language-plaintext highlighter-rouge">@property</code> decorator turns a method into a getter.</li> <li>The <code class="language-plaintext highlighter-rouge">@&lt;name&gt;.setter</code> decorator turns a method into a setter for that property.</li> <li>The setter can enforce logic or validation before changing the internal value.</li> </ol> <h2 id="answer">Answer</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Setting value...
Getting value...
25
Setting value...
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
  ...
ValueError: Temperature below absolute zero!
</code></pre></div></div> <h2 id="explanation">Explanation:</h2> <ul> <li>The first assignment to <code class="language-plaintext highlighter-rouge">temp.temperature</code> calls the setter method and sets the value after printing <code class="language-plaintext highlighter-rouge">"Setting value..."</code>.</li> <li>The call to <code class="language-plaintext highlighter-rouge">print(temp.temperature)</code> invokes the getter, which prints <code class="language-plaintext highlighter-rouge">"Getting value..."</code> and returns <code class="language-plaintext highlighter-rouge">25</code>.</li> <li>The second assignment triggers the setter again, but since the value is below absolute zero, it raises a <code class="language-plaintext highlighter-rouge">ValueError</code>.</li> </ul> <h2 id="learnings">Learnings</h2> <ul> <li>Descriptors Under the Hood: The @property decorator is syntactic sugar for using Python’s descriptor protocol (<code class="language-plaintext highlighter-rouge">__get__</code>, <code class="language-plaintext highlighter-rouge">__set__</code>, <code class="language-plaintext highlighter-rouge">__delete__</code>).</li> <li>Encapsulation: Property decorators allow you to encapsulate access logic without changing how the attribute is used externally.</li> <li>Validation and Safety: Setters provide a clean way to include validation logic during assignment.</li> </ul>]]></content><author><name>Patrick Capaldo</name></author><category term="puzzles"/><category term="python"/><summary type="html"><![CDATA[Controlling attribute access in a class]]></summary></entry><entry><title type="html">PyPuzzle 05 Name Mangling and Private Variables</title><link href="https://patrickcapaldo.github.io/blog/2024/pypuzzle-05/" rel="alternate" type="text/html" title="PyPuzzle 05 Name Mangling and Private Variables"/><published>2024-06-10T00:00:00+00:00</published><updated>2024-06-10T00:00:00+00:00</updated><id>https://patrickcapaldo.github.io/blog/2024/pypuzzle-05</id><content type="html" xml:base="https://patrickcapaldo.github.io/blog/2024/pypuzzle-05/"><![CDATA[<p>This puzzle explores how Python handles “private” variables using <strong>name mangling</strong>, a mechanism that modifies variable names to avoid accidental access or override in subclasses.</p> <h2 id="topics-covered">Topics Covered</h2> <ul> <li>Name mangling</li> <li>Private variables in classes</li> <li>Attribute access and introspection</li> </ul> <h2 id="puzzle-question">Puzzle Question</h2> <p>Why does direct access to <code class="language-plaintext highlighter-rouge">__secret</code> raise an error, and how can it still be accessed? What will the following code print?</p> <h2 id="puzzle-code">Puzzle Code</h2> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Spy</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="n">self</span><span class="p">.</span><span class="n">__secret</span> <span class="o">=</span> <span class="sh">"</span><span class="s">hidden</span><span class="sh">"</span>

    <span class="k">def</span> <span class="nf">reveal</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="n">__secret</span>

<span class="n">agent</span> <span class="o">=</span> <span class="nc">Spy</span><span class="p">()</span>
</code></pre></div></div> <h1 id="what-will-each-of-these-lines-do">What will each of these lines do?</h1> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">print</span><span class="p">(</span><span class="n">agent</span><span class="p">.</span><span class="nf">reveal</span><span class="p">())</span>
<span class="nf">print</span><span class="p">(</span><span class="n">agent</span><span class="p">.</span><span class="n">__secret</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">agent</span><span class="p">.</span><span class="n">_Spy__secret</span><span class="p">)</span>
</code></pre></div></div> <h2 id="hints">Hints</h2> <ol> <li>Double underscores at the start of a variable name trigger name mangling.</li> <li>Name mangling changes the variable name internally to avoid accidental access in subclasses.</li> <li>It’s still possible to access the variable — if you know the mangled name.</li> </ol> <h2 id="answer">Answer</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hidden
AttributeError
hidden
</code></pre></div></div> <h2 id="explanation">Explanation</h2> <ul> <li><code class="language-plaintext highlighter-rouge">agent.reveal()</code> works because it accesses <code class="language-plaintext highlighter-rouge">__secret</code> from within the class where it was defined.</li> <li><code class="language-plaintext highlighter-rouge">agent.__secret</code> raises an <code class="language-plaintext highlighter-rouge">AttributeError</code> because the name has been mangled to <code class="language-plaintext highlighter-rouge">_Spy__secret</code>.</li> <li><code class="language-plaintext highlighter-rouge">agent._Spy__secret</code> works because it manually accesses the mangled name.</li> </ul> <h2 id="learnings">Learnings</h2> <ul> <li>Name Mangling: Python uses name mangling to help protect class internals from accidental overwrites or clashes, especially in subclasses.</li> <li>Not Truly Private: Python doesn’t have true private variables — name mangling is only a convention-based safeguard.</li> <li>Debugging &amp; Introspection: Understanding name mangling is important when debugging, using <code class="language-plaintext highlighter-rouge">dir()</code>, or reflecting on class attributes.</li> </ul>]]></content><author><name>Patrick Capaldo</name></author><category term="puzzles"/><category term="python"/><summary type="html"><![CDATA[How private variables are handled using name mangling.]]></summary></entry><entry><title type="html">PyPuzzle 04 Method Resolution Order</title><link href="https://patrickcapaldo.github.io/blog/2024/pypuzzle-04/" rel="alternate" type="text/html" title="PyPuzzle 04 Method Resolution Order"/><published>2024-05-13T00:00:00+00:00</published><updated>2024-05-13T00:00:00+00:00</updated><id>https://patrickcapaldo.github.io/blog/2024/pypuzzle-04</id><content type="html" xml:base="https://patrickcapaldo.github.io/blog/2024/pypuzzle-04/"><![CDATA[<p>This weeks PyPuzzle will test your knowledge of the Method Resolution Order (MRO) and the C3 linearisation algorithm that determines the order in which classes are inherited and methods are resolved.</p> <ul> <li>Inheritance and method resolution</li> <li>Method Resolution Order (MRO)</li> <li>The <code class="language-plaintext highlighter-rouge">super()</code> function</li> </ul> <p>Feel free to use an online Python compiler and interpreter like [this] (https://www.online-python.com/) to try running the code yourself. The answer is supplied below the code.</p> <h2 id="question">Question</h2> <p>What is the expected output of the following code?</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">A</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">show</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">A</span><span class="sh">"</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">B</span><span class="p">(</span><span class="n">A</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">show</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">B</span><span class="sh">"</span><span class="p">)</span>
        <span class="nf">super</span><span class="p">().</span><span class="nf">show</span><span class="p">()</span>

<span class="k">class</span> <span class="nc">C</span><span class="p">(</span><span class="n">A</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">show</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">C</span><span class="sh">"</span><span class="p">)</span>
        <span class="nf">super</span><span class="p">().</span><span class="nf">show</span><span class="p">()</span>

<span class="k">class</span> <span class="nc">D</span><span class="p">(</span><span class="n">B</span><span class="p">,</span> <span class="n">C</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">show</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">D</span><span class="sh">"</span><span class="p">)</span>
        <span class="nf">super</span><span class="p">().</span><span class="nf">show</span><span class="p">()</span>

<span class="n">d</span> <span class="o">=</span> <span class="nc">D</span><span class="p">()</span>
<span class="n">d</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>

</code></pre></div></div> <h2 id="hints">Hints</h2> <ol> <li>Python uses the C3 linearization algorithm to determine the MRO of a class. What does the MRO look like for <code class="language-plaintext highlighter-rouge">D</code>?</li> <li>The <code class="language-plaintext highlighter-rouge">super()</code> function doesn’t always refer to the immediate parent class. Instead, it follows the MRO.</li> <li>How do multiple inheritance and <code class="language-plaintext highlighter-rouge">super()</code> calls interact?</li> </ol> <h2 id="answer">Answer</h2> <p>The output is:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>D
B
C
A

</code></pre></div></div> <ul> <li>MRO (Method Resolution Order): The MRO for class <code class="language-plaintext highlighter-rouge">D</code> is determined using the C3 linearization algorithm. The MRO for <code class="language-plaintext highlighter-rouge">D</code> is: <code class="language-plaintext highlighter-rouge">[D, B, C, A]</code>.</li> <li>When <code class="language-plaintext highlighter-rouge">d.show()</code> is called: <ul> <li><code class="language-plaintext highlighter-rouge">D.show()</code> is executed first and prints <code class="language-plaintext highlighter-rouge">D</code>. It then calls <code class="language-plaintext highlighter-rouge">super().show()</code>, which refers to the next class in the MRO, <code class="language-plaintext highlighter-rouge">B</code>.</li> <li><code class="language-plaintext highlighter-rouge">B.show()</code> is called and prints <code class="language-plaintext highlighter-rouge">B</code>. It also calls <code class="language-plaintext highlighter-rouge">super().show()</code>, which refers to <code class="language-plaintext highlighter-rouge">C</code>, the next in the MRO.</li> <li><code class="language-plaintext highlighter-rouge">C.show()</code> is executed and prints <code class="language-plaintext highlighter-rouge">C</code>. It calls <code class="language-plaintext highlighter-rouge">super().show()</code>, which moves to <code class="language-plaintext highlighter-rouge">A</code>.</li> <li><code class="language-plaintext highlighter-rouge">A.show()</code> is executed and prints <code class="language-plaintext highlighter-rouge">A</code>. Since <code class="language-plaintext highlighter-rouge">A</code> doesn’t have a <code class="language-plaintext highlighter-rouge">super().show()</code> call, the chain ends there.</li> </ul> </li> </ul> <h2 id="learnings">Learnings</h2> <ol> <li>Method Resolution Order (MRO): The MRO determines the order in which classes are checked when a method is called. It is calculated using the C3 linearization algorithm, which ensures that the inheritance hierarchy is respected without ambiguity. Note that the MRO is unique for each class yet the MRO of a subclass is still consistent with the MRO of its parent class.</li> </ol> <p>The MRO of a class can be checked with the <code class="language-plaintext highlighter-rouge">__mro__</code> attribute or the <code class="language-plaintext highlighter-rouge">mro()</code> method.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">A</span><span class="p">:</span>
    <span class="k">pass</span>

<span class="k">class</span> <span class="nc">B</span><span class="p">(</span><span class="n">A</span><span class="p">):</span>
    <span class="k">pass</span>

<span class="k">class</span> <span class="nc">C</span><span class="p">(</span><span class="n">A</span><span class="p">):</span>
    <span class="k">pass</span>

<span class="k">class</span> <span class="nc">D</span><span class="p">(</span><span class="n">B</span><span class="p">,</span> <span class="n">C</span><span class="p">):</span>
    <span class="k">pass</span>

<span class="nf">print</span><span class="p">(</span><span class="n">D</span><span class="p">.</span><span class="n">__mro__</span><span class="p">)</span>
<span class="c1"># Output: (&lt;class '__main__.D'&gt;, &lt;class '__main__.B'&gt;, &lt;class '__main__.C'&gt;, &lt;class '__main__.A'&gt;, &lt;class 'object'&gt;)
</span>
</code></pre></div></div> <ol> <li>C3 Linearisation Algorithm: This algorithm determines the MRO for each class. It works by merging the MROs of the direct parent classes and the list of parent classes themselves. The C3 linearisation algorithm follows the following principles: <ul> <li>Preserve the local precedence order: If a class <code class="language-plaintext highlighter-rouge">B</code> inherits from a class <code class="language-plaintext highlighter-rouge">A</code>, <code class="language-plaintext highlighter-rouge">B</code> should appear before <code class="language-plaintext highlighter-rouge">A</code> in the MRO for class <code class="language-plaintext highlighter-rouge">B</code> (and any other classes that inherit from class <code class="language-plaintext highlighter-rouge">B</code>).</li> <li>Consistent across all subclasses: The algorithm should work uniformly when building MROs of classes that have common ancestors.</li> <li>Avoid duplicate entries: Each class should appear only once in the MRO.</li> </ul> </li> <li><code class="language-plaintext highlighter-rouge">super()</code>: The <code class="language-plaintext highlighter-rouge">super()</code> function doesn’t necessarily refer to the immediate parent class but instead follows the MRO. This is crucial in cases of multiple inheritance.</li> <li>Class Hierarchies: Understanding how Python resolves method calls in complex hierarchies can prevent unexpected behavior and bugs in class designs involving multiple inheritance.</li> </ol>]]></content><author><name>Patrick Capaldo</name></author><category term="puzzles"/><category term="python"/><summary type="html"><![CDATA[The order in which classes are inherited and methods are resolved.]]></summary></entry><entry><title type="html">PyPuzzle 03 Yield</title><link href="https://patrickcapaldo.github.io/blog/2024/pypuzzle-03/" rel="alternate" type="text/html" title="PyPuzzle 03 Yield"/><published>2024-05-06T00:00:00+00:00</published><updated>2024-05-06T00:00:00+00:00</updated><id>https://patrickcapaldo.github.io/blog/2024/pypuzzle-03</id><content type="html" xml:base="https://patrickcapaldo.github.io/blog/2024/pypuzzle-03/"><![CDATA[<p>This weeks PyPuzzle will test your knowledge of order of generator functions and the yield keyword.</p> <ul> <li>Generator functions</li> <li><code class="language-plaintext highlighter-rouge">yield</code> keyword</li> <li>Iterators and lazy evaluation</li> </ul> <p>Feel free to use an online Python compiler and interpreter like [this] (https://www.online-python.com/) to try running the code yourself. The answer is supplied below the code.</p> <h2 id="question">Question</h2> <p>What is the expected output of the following code? How does the <code class="language-plaintext highlighter-rouge">yield</code> keyword affect the function’s behaviour and why doesn’t it behave like a typical <code class="language-plaintext highlighter-rouge">return</code>?</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">my_generator</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Generator started</span><span class="sh">"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
        <span class="k">yield</span> <span class="n">i</span>
        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Yielded </span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s">, pausing generator</span><span class="sh">"</span><span class="p">)</span>

<span class="c1"># Initialize the generator function
</span><span class="n">gen</span> <span class="o">=</span> <span class="nf">my_generator</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>

<span class="c1"># Step through the generator
</span><span class="nf">print</span><span class="p">(</span><span class="nf">next</span><span class="p">(</span><span class="n">gen</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="nf">next</span><span class="p">(</span><span class="n">gen</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="nf">next</span><span class="p">(</span><span class="n">gen</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="nf">next</span><span class="p">(</span><span class="n">gen</span><span class="p">))</span>  <span class="c1"># What happens here?
</span>
</code></pre></div></div> <h2 id="hints">Hints</h2> <ol> <li>What is the difference between <code class="language-plaintext highlighter-rouge">yield</code> and <code class="language-plaintext highlighter-rouge">return</code>? Consider how many times <code class="language-plaintext highlighter-rouge">yield</code> allows the function to pause and resume.</li> <li>Try to visualize what the function does with each call to <code class="language-plaintext highlighter-rouge">next(gen)</code>. How does <code class="language-plaintext highlighter-rouge">my_generator()</code> know where to pick up after yielding a value?</li> <li>What might happen when <code class="language-plaintext highlighter-rouge">next(gen)</code> is called, but there are no more items to yield?</li> </ol> <h2 id="answer">Answer</h2> <ul> <li>The first call to <code class="language-plaintext highlighter-rouge">next(gen)</code> starts the generator, which prints “<code class="language-plaintext highlighter-rouge">Generator started"</code>, yields <code class="language-plaintext highlighter-rouge">0</code>, and then pauses.</li> <li>Each subsequent <code class="language-plaintext highlighter-rouge">next(gen)</code> call resumes from where it left off, yielding the next value in the sequence (<code class="language-plaintext highlighter-rouge">1</code>, then <code class="language-plaintext highlighter-rouge">2</code>), and printing a message after each yield.</li> <li>When <code class="language-plaintext highlighter-rouge">next(gen)</code> is called a fourth time, there are no more values to yield, so Python raises a <code class="language-plaintext highlighter-rouge">StopIteration</code> exception, indicating that the generator has been exhausted.</li> </ul> <p>Expected output:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Generator started
0
Yielded 0, pausing generator
1
Yielded 1, pausing generator
2
Yielded 2, pausing generator
</code></pre></div></div> <h2 id="learnings">Learnings</h2> <ul> <li>Generator Functions and <code class="language-plaintext highlighter-rouge">yield</code>: Using <code class="language-plaintext highlighter-rouge">yield</code> in a function turns it into a generator function. Instead of returning a single result and terminating, it yields multiple values, pausing between each, and can resume execution each time it’s called.</li> <li>Lazy Evaluation: Generators allow Python to produce values on the fly, making them memory-efficient for large data sequences, as values are generated only when needed. This is also beneficial for asynchronous tasks that are input/output (I/O)-bound as you can yield control back to an event loop once the required resources are ready.</li> <li><code class="language-plaintext highlighter-rouge">StopIteration</code> Exception: When a generator has no more values to yield, calling <code class="language-plaintext highlighter-rouge">next()</code> raises a <code class="language-plaintext highlighter-rouge">StopIteration</code> exception, signaling that iteration has completed. This is handled automatically when used in a loop, like a for loop.</li> <li>Generator functions also make it possible to produce infinite sequences (like Fibonacci and prime numbers) without risking memory overload. You can produce as much as you like from an infinite sequence without actually storing the entire sequence.</li> <li>An analogy is like streaming a TV show. You don’t have to load all the episodes from every season of the TV show when you start. You simply load the first episode and start watching that. If you need to pause it and leave for a while, that is fine, if you keep watching and want to watch the second episode, then simply load it once the first one finishes.</li> </ul>]]></content><author><name>Patrick Capaldo</name></author><category term="puzzles"/><category term="python"/><summary type="html"><![CDATA[Generator functions and the yield keyword.]]></summary></entry></feed>